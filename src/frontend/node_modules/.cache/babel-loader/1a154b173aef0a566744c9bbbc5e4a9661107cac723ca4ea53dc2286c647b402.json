{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport { Provider, create } from 'mini-store';\nimport omit from \"rc-util/es/omit\";\nimport SubPopupMenu, { getActiveKey } from './SubPopupMenu';\nimport { noop } from './util';\nimport { getMotion } from './utils/legacyUtil';\nvar Menu = /*#__PURE__*/function (_React$Component) {\n  _inherits(Menu, _React$Component);\n  var _super = _createSuper(Menu);\n  function Menu(props) {\n    var _this;\n    _classCallCheck(this, Menu);\n    _this = _super.call(this, props);\n    _this.onSelect = function (selectInfo) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n        props = _assertThisInitialize.props;\n      if (props.selectable) {\n        // root menu\n        var _this$store$getState = _this.store.getState(),\n          _selectedKeys = _this$store$getState.selectedKeys;\n        var selectedKey = selectInfo.key;\n        if (props.multiple) {\n          _selectedKeys = _selectedKeys.concat([selectedKey]);\n        } else {\n          _selectedKeys = [selectedKey];\n        }\n        if (!('selectedKeys' in props)) {\n          _this.store.setState({\n            selectedKeys: _selectedKeys\n          });\n        }\n        props.onSelect(_objectSpread(_objectSpread({}, selectInfo), {}, {\n          selectedKeys: _selectedKeys\n        }));\n      }\n    };\n    _this.onClick = function (e) {\n      var mode = _this.getRealMenuMode();\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n        store = _assertThisInitialize2.store,\n        onOpenChange = _assertThisInitialize2.props.onOpenChange;\n      if (mode !== 'inline' && !('openKeys' in _this.props)) {\n        // closing vertical popup submenu after click it\n        store.setState({\n          openKeys: []\n        });\n        onOpenChange([]);\n      }\n      _this.props.onClick(e);\n    }; // onKeyDown needs to be exposed as a instance method\n    // e.g., in rc-select, we need to navigate menu item while\n    // current active item is rc-select input box rather than the menu itself\n\n    _this.onKeyDown = function (e, callback) {\n      _this.innerMenu.getWrappedInstance().onKeyDown(e, callback);\n    };\n    _this.onOpenChange = function (event) {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n        props = _assertThisInitialize3.props;\n      var openKeys = _this.store.getState().openKeys.concat();\n      var changed = false;\n      var processSingle = function processSingle(e) {\n        var oneChanged = false;\n        if (e.open) {\n          oneChanged = openKeys.indexOf(e.key) === -1;\n          if (oneChanged) {\n            openKeys.push(e.key);\n          }\n        } else {\n          var index = openKeys.indexOf(e.key);\n          oneChanged = index !== -1;\n          if (oneChanged) {\n            openKeys.splice(index, 1);\n          }\n        }\n        changed = changed || oneChanged;\n      };\n      if (Array.isArray(event)) {\n        // batch change call\n        event.forEach(processSingle);\n      } else {\n        processSingle(event);\n      }\n      if (changed) {\n        if (!('openKeys' in _this.props)) {\n          _this.store.setState({\n            openKeys: openKeys\n          });\n        }\n        props.onOpenChange(openKeys);\n      }\n    };\n    _this.onDeselect = function (selectInfo) {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n        props = _assertThisInitialize4.props;\n      if (props.selectable) {\n        var _selectedKeys2 = _this.store.getState().selectedKeys.concat();\n        var selectedKey = selectInfo.key;\n        var index = _selectedKeys2.indexOf(selectedKey);\n        if (index !== -1) {\n          _selectedKeys2.splice(index, 1);\n        }\n        if (!('selectedKeys' in props)) {\n          _this.store.setState({\n            selectedKeys: _selectedKeys2\n          });\n        }\n        props.onDeselect(_objectSpread(_objectSpread({}, selectInfo), {}, {\n          selectedKeys: _selectedKeys2\n        }));\n      }\n    }; // Restore vertical mode when menu is collapsed responsively when mounted\n    // https://github.com/ant-design/ant-design/issues/13104\n    // TODO: not a perfect solution,\n    // looking a new way to avoid setting switchingModeFromInline in this situation\n\n    _this.onMouseEnter = function (e) {\n      _this.restoreModeVerticalFromInline();\n      var onMouseEnter = _this.props.onMouseEnter;\n      if (onMouseEnter) {\n        onMouseEnter(e);\n      }\n    };\n    _this.onTransitionEnd = function (e) {\n      // when inlineCollapsed menu width animation finished\n      // https://github.com/ant-design/ant-design/issues/12864\n      var widthCollapsed = e.propertyName === 'width' && e.target === e.currentTarget; // Fix SVGElement e.target.className.indexOf is not a function\n      // https://github.com/ant-design/ant-design/issues/15699\n\n      var className = e.target.className; // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal,\n      // unless during an animation.\n\n      var classNameValue = Object.prototype.toString.call(className) === '[object SVGAnimatedString]' ? className.animVal : className; // Fix for <Menu style={{ width: '100%' }} />,\n      // the width transition won't trigger when menu is collapsed\n      // https://github.com/ant-design/ant-design-pro/issues/2783\n\n      var iconScaled = e.propertyName === 'font-size' && classNameValue.indexOf('anticon') >= 0;\n      if (widthCollapsed || iconScaled) {\n        _this.restoreModeVerticalFromInline();\n      }\n    };\n    _this.setInnerMenu = function (node) {\n      _this.innerMenu = node;\n    };\n    _this.isRootMenu = true;\n    var selectedKeys = props.defaultSelectedKeys;\n    var openKeys = props.defaultOpenKeys;\n    if ('selectedKeys' in props) {\n      selectedKeys = props.selectedKeys || [];\n    }\n    if ('openKeys' in props) {\n      openKeys = props.openKeys || [];\n    }\n    _this.store = create({\n      selectedKeys: selectedKeys,\n      openKeys: openKeys,\n      activeKey: {\n        '0-menu-': getActiveKey(props, props.activeKey)\n      }\n    });\n    _this.state = {\n      switchingModeFromInline: false,\n      prevProps: props,\n      inlineOpenKeys: [],\n      store: _this.store\n    };\n    return _this;\n  }\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateMiniStore();\n      this.updateMenuDisplay();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n        siderCollapsed = _this$props.siderCollapsed,\n        inlineCollapsed = _this$props.inlineCollapsed,\n        onOpenChange = _this$props.onOpenChange;\n      if (!prevProps.inlineCollapsed && inlineCollapsed || !prevProps.siderCollapsed && siderCollapsed) {\n        onOpenChange([]);\n      }\n      this.updateMiniStore();\n      this.updateMenuDisplay();\n    }\n  }, {\n    key: \"updateMenuDisplay\",\n    value: function updateMenuDisplay() {\n      var collapsedWidth = this.props.collapsedWidth,\n        store = this.store,\n        prevOpenKeys = this.prevOpenKeys; // https://github.com/ant-design/ant-design/issues/8587\n\n      var hideMenu = this.getInlineCollapsed() && (collapsedWidth === 0 || collapsedWidth === '0' || collapsedWidth === '0px');\n      if (hideMenu) {\n        this.prevOpenKeys = store.getState().openKeys.concat();\n        this.store.setState({\n          openKeys: []\n        });\n      } else if (prevOpenKeys) {\n        this.store.setState({\n          openKeys: prevOpenKeys\n        });\n        this.prevOpenKeys = null;\n      }\n    }\n  }, {\n    key: \"getRealMenuMode\",\n    value: function getRealMenuMode() {\n      var mode = this.props.mode;\n      var switchingModeFromInline = this.state.switchingModeFromInline;\n      var inlineCollapsed = this.getInlineCollapsed();\n      if (switchingModeFromInline && inlineCollapsed) {\n        return 'inline';\n      }\n      return inlineCollapsed ? 'vertical' : mode;\n    }\n  }, {\n    key: \"getInlineCollapsed\",\n    value: function getInlineCollapsed() {\n      var _this$props2 = this.props,\n        inlineCollapsed = _this$props2.inlineCollapsed,\n        siderCollapsed = _this$props2.siderCollapsed;\n      if (siderCollapsed !== undefined) {\n        return siderCollapsed;\n      }\n      return inlineCollapsed;\n    }\n  }, {\n    key: \"restoreModeVerticalFromInline\",\n    value: function restoreModeVerticalFromInline() {\n      var switchingModeFromInline = this.state.switchingModeFromInline;\n      if (switchingModeFromInline) {\n        this.setState({\n          switchingModeFromInline: false\n        });\n      }\n    }\n  }, {\n    key: \"updateMiniStore\",\n    value: function updateMiniStore() {\n      if ('selectedKeys' in this.props) {\n        this.store.setState({\n          selectedKeys: this.props.selectedKeys || []\n        });\n      }\n      if ('openKeys' in this.props) {\n        this.store.setState({\n          openKeys: this.props.openKeys || []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _objectSpread({}, omit(this.props, ['collapsedWidth', 'siderCollapsed', 'defaultMotions']));\n      var mode = this.getRealMenuMode();\n      props.className += \" \".concat(props.prefixCls, \"-root\");\n      if (props.direction === 'rtl') {\n        props.className += \" \".concat(props.prefixCls, \"-rtl\");\n      }\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        mode: mode,\n        onClick: this.onClick,\n        onOpenChange: this.onOpenChange,\n        onDeselect: this.onDeselect,\n        onSelect: this.onSelect,\n        onMouseEnter: this.onMouseEnter,\n        onTransitionEnd: this.onTransitionEnd,\n        parentMenu: this,\n        motion: getMotion(this.props, this.state, mode)\n      });\n      delete props.openAnimation;\n      delete props.openTransitionName;\n      return /*#__PURE__*/React.createElement(Provider, {\n        store: this.store\n      }, /*#__PURE__*/React.createElement(SubPopupMenu, _extends({}, props, {\n        ref: this.setInnerMenu\n      }), this.props.children));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var prevProps = prevState.prevProps,\n        store = prevState.store;\n      var prevStoreState = store.getState();\n      var newStoreState = {};\n      var newState = {\n        prevProps: nextProps\n      };\n      if (prevProps.mode === 'inline' && nextProps.mode !== 'inline') {\n        newState.switchingModeFromInline = true;\n      }\n      if ('openKeys' in nextProps) {\n        newStoreState.openKeys = nextProps.openKeys || [];\n      } else {\n        // [Legacy] Old code will return after `openKeys` changed.\n        // Not sure the reason, we should keep this logic still.\n        if (nextProps.inlineCollapsed && !prevProps.inlineCollapsed || nextProps.siderCollapsed && !prevProps.siderCollapsed) {\n          newState.switchingModeFromInline = true;\n          newState.inlineOpenKeys = prevStoreState.openKeys;\n          newStoreState.openKeys = [];\n        }\n        if (!nextProps.inlineCollapsed && prevProps.inlineCollapsed || !nextProps.siderCollapsed && prevProps.siderCollapsed) {\n          newStoreState.openKeys = prevState.inlineOpenKeys;\n          newState.inlineOpenKeys = [];\n        }\n      }\n      if (Object.keys(newStoreState).length) {\n        store.setState(newStoreState);\n      }\n      return newState;\n    }\n  }]);\n  return Menu;\n}(React.Component);\nMenu.defaultProps = {\n  selectable: true,\n  onClick: noop,\n  onSelect: noop,\n  onOpenChange: noop,\n  onDeselect: noop,\n  defaultSelectedKeys: [],\n  defaultOpenKeys: [],\n  subMenuOpenDelay: 0.1,\n  subMenuCloseDelay: 0.1,\n  triggerSubMenuAction: 'hover',\n  prefixCls: 'rc-menu',\n  className: '',\n  mode: 'vertical',\n  style: {},\n  builtinPlacements: {},\n  overflowedIndicator: /*#__PURE__*/React.createElement(\"span\", null, \"\\xB7\\xB7\\xB7\")\n};\nexport default Menu;","map":{"version":3,"names":["_extends","_objectSpread","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","React","Provider","create","omit","SubPopupMenu","getActiveKey","noop","getMotion","Menu","_React$Component","_super","props","_this","call","onSelect","selectInfo","_assertThisInitialize","selectable","_this$store$getState","store","getState","_selectedKeys","selectedKeys","selectedKey","key","multiple","concat","setState","onClick","e","mode","getRealMenuMode","_assertThisInitialize2","onOpenChange","openKeys","onKeyDown","callback","innerMenu","getWrappedInstance","event","_assertThisInitialize3","changed","processSingle","oneChanged","open","indexOf","push","index","splice","Array","isArray","forEach","onDeselect","_assertThisInitialize4","_selectedKeys2","onMouseEnter","restoreModeVerticalFromInline","onTransitionEnd","widthCollapsed","propertyName","target","currentTarget","className","classNameValue","Object","prototype","toString","animVal","iconScaled","setInnerMenu","node","isRootMenu","defaultSelectedKeys","defaultOpenKeys","activeKey","state","switchingModeFromInline","prevProps","inlineOpenKeys","value","componentDidMount","updateMiniStore","updateMenuDisplay","componentDidUpdate","_this$props","siderCollapsed","inlineCollapsed","collapsedWidth","prevOpenKeys","hideMenu","getInlineCollapsed","_this$props2","undefined","render","prefixCls","direction","parentMenu","motion","openAnimation","openTransitionName","createElement","ref","children","getDerivedStateFromProps","nextProps","prevState","prevStoreState","newStoreState","newState","keys","length","Component","defaultProps","subMenuOpenDelay","subMenuCloseDelay","triggerSubMenuAction","style","builtinPlacements","overflowedIndicator"],"sources":["C:/Users/Oğuz/Desktop/fullstack/src/frontend/node_modules/rc-menu/es/Menu.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport { Provider, create } from 'mini-store';\nimport omit from \"rc-util/es/omit\";\nimport SubPopupMenu, { getActiveKey } from './SubPopupMenu';\nimport { noop } from './util';\nimport { getMotion } from './utils/legacyUtil';\n\nvar Menu = /*#__PURE__*/function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu(props) {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _super.call(this, props);\n\n    _this.onSelect = function (selectInfo) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props;\n\n      if (props.selectable) {\n        // root menu\n        var _this$store$getState = _this.store.getState(),\n            _selectedKeys = _this$store$getState.selectedKeys;\n\n        var selectedKey = selectInfo.key;\n\n        if (props.multiple) {\n          _selectedKeys = _selectedKeys.concat([selectedKey]);\n        } else {\n          _selectedKeys = [selectedKey];\n        }\n\n        if (!('selectedKeys' in props)) {\n          _this.store.setState({\n            selectedKeys: _selectedKeys\n          });\n        }\n\n        props.onSelect(_objectSpread(_objectSpread({}, selectInfo), {}, {\n          selectedKeys: _selectedKeys\n        }));\n      }\n    };\n\n    _this.onClick = function (e) {\n      var mode = _this.getRealMenuMode();\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          store = _assertThisInitialize2.store,\n          onOpenChange = _assertThisInitialize2.props.onOpenChange;\n\n      if (mode !== 'inline' && !('openKeys' in _this.props)) {\n        // closing vertical popup submenu after click it\n        store.setState({\n          openKeys: []\n        });\n        onOpenChange([]);\n      }\n\n      _this.props.onClick(e);\n    }; // onKeyDown needs to be exposed as a instance method\n    // e.g., in rc-select, we need to navigate menu item while\n    // current active item is rc-select input box rather than the menu itself\n\n\n    _this.onKeyDown = function (e, callback) {\n      _this.innerMenu.getWrappedInstance().onKeyDown(e, callback);\n    };\n\n    _this.onOpenChange = function (event) {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          props = _assertThisInitialize3.props;\n\n      var openKeys = _this.store.getState().openKeys.concat();\n\n      var changed = false;\n\n      var processSingle = function processSingle(e) {\n        var oneChanged = false;\n\n        if (e.open) {\n          oneChanged = openKeys.indexOf(e.key) === -1;\n\n          if (oneChanged) {\n            openKeys.push(e.key);\n          }\n        } else {\n          var index = openKeys.indexOf(e.key);\n          oneChanged = index !== -1;\n\n          if (oneChanged) {\n            openKeys.splice(index, 1);\n          }\n        }\n\n        changed = changed || oneChanged;\n      };\n\n      if (Array.isArray(event)) {\n        // batch change call\n        event.forEach(processSingle);\n      } else {\n        processSingle(event);\n      }\n\n      if (changed) {\n        if (!('openKeys' in _this.props)) {\n          _this.store.setState({\n            openKeys: openKeys\n          });\n        }\n\n        props.onOpenChange(openKeys);\n      }\n    };\n\n    _this.onDeselect = function (selectInfo) {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n          props = _assertThisInitialize4.props;\n\n      if (props.selectable) {\n        var _selectedKeys2 = _this.store.getState().selectedKeys.concat();\n\n        var selectedKey = selectInfo.key;\n\n        var index = _selectedKeys2.indexOf(selectedKey);\n\n        if (index !== -1) {\n          _selectedKeys2.splice(index, 1);\n        }\n\n        if (!('selectedKeys' in props)) {\n          _this.store.setState({\n            selectedKeys: _selectedKeys2\n          });\n        }\n\n        props.onDeselect(_objectSpread(_objectSpread({}, selectInfo), {}, {\n          selectedKeys: _selectedKeys2\n        }));\n      }\n    }; // Restore vertical mode when menu is collapsed responsively when mounted\n    // https://github.com/ant-design/ant-design/issues/13104\n    // TODO: not a perfect solution,\n    // looking a new way to avoid setting switchingModeFromInline in this situation\n\n\n    _this.onMouseEnter = function (e) {\n      _this.restoreModeVerticalFromInline();\n\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter(e);\n      }\n    };\n\n    _this.onTransitionEnd = function (e) {\n      // when inlineCollapsed menu width animation finished\n      // https://github.com/ant-design/ant-design/issues/12864\n      var widthCollapsed = e.propertyName === 'width' && e.target === e.currentTarget; // Fix SVGElement e.target.className.indexOf is not a function\n      // https://github.com/ant-design/ant-design/issues/15699\n\n      var className = e.target.className; // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal,\n      // unless during an animation.\n\n      var classNameValue = Object.prototype.toString.call(className) === '[object SVGAnimatedString]' ? className.animVal : className; // Fix for <Menu style={{ width: '100%' }} />,\n      // the width transition won't trigger when menu is collapsed\n      // https://github.com/ant-design/ant-design-pro/issues/2783\n\n      var iconScaled = e.propertyName === 'font-size' && classNameValue.indexOf('anticon') >= 0;\n\n      if (widthCollapsed || iconScaled) {\n        _this.restoreModeVerticalFromInline();\n      }\n    };\n\n    _this.setInnerMenu = function (node) {\n      _this.innerMenu = node;\n    };\n\n    _this.isRootMenu = true;\n    var selectedKeys = props.defaultSelectedKeys;\n    var openKeys = props.defaultOpenKeys;\n\n    if ('selectedKeys' in props) {\n      selectedKeys = props.selectedKeys || [];\n    }\n\n    if ('openKeys' in props) {\n      openKeys = props.openKeys || [];\n    }\n\n    _this.store = create({\n      selectedKeys: selectedKeys,\n      openKeys: openKeys,\n      activeKey: {\n        '0-menu-': getActiveKey(props, props.activeKey)\n      }\n    });\n    _this.state = {\n      switchingModeFromInline: false,\n      prevProps: props,\n      inlineOpenKeys: [],\n      store: _this.store\n    };\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateMiniStore();\n      this.updateMenuDisplay();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          siderCollapsed = _this$props.siderCollapsed,\n          inlineCollapsed = _this$props.inlineCollapsed,\n          onOpenChange = _this$props.onOpenChange;\n\n      if (!prevProps.inlineCollapsed && inlineCollapsed || !prevProps.siderCollapsed && siderCollapsed) {\n        onOpenChange([]);\n      }\n\n      this.updateMiniStore();\n      this.updateMenuDisplay();\n    }\n  }, {\n    key: \"updateMenuDisplay\",\n    value: function updateMenuDisplay() {\n      var collapsedWidth = this.props.collapsedWidth,\n          store = this.store,\n          prevOpenKeys = this.prevOpenKeys; // https://github.com/ant-design/ant-design/issues/8587\n\n      var hideMenu = this.getInlineCollapsed() && (collapsedWidth === 0 || collapsedWidth === '0' || collapsedWidth === '0px');\n\n      if (hideMenu) {\n        this.prevOpenKeys = store.getState().openKeys.concat();\n        this.store.setState({\n          openKeys: []\n        });\n      } else if (prevOpenKeys) {\n        this.store.setState({\n          openKeys: prevOpenKeys\n        });\n        this.prevOpenKeys = null;\n      }\n    }\n  }, {\n    key: \"getRealMenuMode\",\n    value: function getRealMenuMode() {\n      var mode = this.props.mode;\n      var switchingModeFromInline = this.state.switchingModeFromInline;\n      var inlineCollapsed = this.getInlineCollapsed();\n\n      if (switchingModeFromInline && inlineCollapsed) {\n        return 'inline';\n      }\n\n      return inlineCollapsed ? 'vertical' : mode;\n    }\n  }, {\n    key: \"getInlineCollapsed\",\n    value: function getInlineCollapsed() {\n      var _this$props2 = this.props,\n          inlineCollapsed = _this$props2.inlineCollapsed,\n          siderCollapsed = _this$props2.siderCollapsed;\n\n      if (siderCollapsed !== undefined) {\n        return siderCollapsed;\n      }\n\n      return inlineCollapsed;\n    }\n  }, {\n    key: \"restoreModeVerticalFromInline\",\n    value: function restoreModeVerticalFromInline() {\n      var switchingModeFromInline = this.state.switchingModeFromInline;\n\n      if (switchingModeFromInline) {\n        this.setState({\n          switchingModeFromInline: false\n        });\n      }\n    }\n  }, {\n    key: \"updateMiniStore\",\n    value: function updateMiniStore() {\n      if ('selectedKeys' in this.props) {\n        this.store.setState({\n          selectedKeys: this.props.selectedKeys || []\n        });\n      }\n\n      if ('openKeys' in this.props) {\n        this.store.setState({\n          openKeys: this.props.openKeys || []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _objectSpread({}, omit(this.props, ['collapsedWidth', 'siderCollapsed', 'defaultMotions']));\n\n      var mode = this.getRealMenuMode();\n      props.className += \" \".concat(props.prefixCls, \"-root\");\n\n      if (props.direction === 'rtl') {\n        props.className += \" \".concat(props.prefixCls, \"-rtl\");\n      }\n\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        mode: mode,\n        onClick: this.onClick,\n        onOpenChange: this.onOpenChange,\n        onDeselect: this.onDeselect,\n        onSelect: this.onSelect,\n        onMouseEnter: this.onMouseEnter,\n        onTransitionEnd: this.onTransitionEnd,\n        parentMenu: this,\n        motion: getMotion(this.props, this.state, mode)\n      });\n      delete props.openAnimation;\n      delete props.openTransitionName;\n      return /*#__PURE__*/React.createElement(Provider, {\n        store: this.store\n      }, /*#__PURE__*/React.createElement(SubPopupMenu, _extends({}, props, {\n        ref: this.setInnerMenu\n      }), this.props.children));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var prevProps = prevState.prevProps,\n          store = prevState.store;\n      var prevStoreState = store.getState();\n      var newStoreState = {};\n      var newState = {\n        prevProps: nextProps\n      };\n\n      if (prevProps.mode === 'inline' && nextProps.mode !== 'inline') {\n        newState.switchingModeFromInline = true;\n      }\n\n      if ('openKeys' in nextProps) {\n        newStoreState.openKeys = nextProps.openKeys || [];\n      } else {\n        // [Legacy] Old code will return after `openKeys` changed.\n        // Not sure the reason, we should keep this logic still.\n        if (nextProps.inlineCollapsed && !prevProps.inlineCollapsed || nextProps.siderCollapsed && !prevProps.siderCollapsed) {\n          newState.switchingModeFromInline = true;\n          newState.inlineOpenKeys = prevStoreState.openKeys;\n          newStoreState.openKeys = [];\n        }\n\n        if (!nextProps.inlineCollapsed && prevProps.inlineCollapsed || !nextProps.siderCollapsed && prevProps.siderCollapsed) {\n          newStoreState.openKeys = prevState.inlineOpenKeys;\n          newState.inlineOpenKeys = [];\n        }\n      }\n\n      if (Object.keys(newStoreState).length) {\n        store.setState(newStoreState);\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nMenu.defaultProps = {\n  selectable: true,\n  onClick: noop,\n  onSelect: noop,\n  onOpenChange: noop,\n  onDeselect: noop,\n  defaultSelectedKeys: [],\n  defaultOpenKeys: [],\n  subMenuOpenDelay: 0.1,\n  subMenuCloseDelay: 0.1,\n  triggerSubMenuAction: 'hover',\n  prefixCls: 'rc-menu',\n  className: '',\n  mode: 'vertical',\n  style: {},\n  builtinPlacements: {},\n  overflowedIndicator: /*#__PURE__*/React.createElement(\"span\", null, \"\\xB7\\xB7\\xB7\")\n};\nexport default Menu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}