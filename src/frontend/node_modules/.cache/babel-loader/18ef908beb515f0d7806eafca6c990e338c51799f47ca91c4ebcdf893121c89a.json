{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport warning from \"rc-util/es/warning\";\nexport function getMotion(_ref, _ref2, menuMode) {\n  var prefixCls = _ref.prefixCls,\n    motion = _ref.motion,\n    _ref$defaultMotions = _ref.defaultMotions,\n    defaultMotions = _ref$defaultMotions === void 0 ? {} : _ref$defaultMotions,\n    openAnimation = _ref.openAnimation,\n    openTransitionName = _ref.openTransitionName;\n  var switchingModeFromInline = _ref2.switchingModeFromInline;\n  if (motion) {\n    return motion;\n  }\n  if (_typeof(openAnimation) === 'object' && openAnimation) {\n    warning(false, 'Object type of `openAnimation` is removed. Please use `motion` instead.');\n  } else if (typeof openAnimation === 'string') {\n    return {\n      motionName: \"\".concat(prefixCls, \"-open-\").concat(openAnimation)\n    };\n  }\n  if (openTransitionName) {\n    return {\n      motionName: openTransitionName\n    };\n  } // Default logic\n\n  var defaultMotion = defaultMotions[menuMode];\n  if (defaultMotion) {\n    return defaultMotion;\n  } // When mode switch from inline\n  // submenu should hide without animation\n\n  return switchingModeFromInline ? null : defaultMotions.other;\n}","map":{"version":3,"names":["_typeof","warning","getMotion","_ref","_ref2","menuMode","prefixCls","motion","_ref$defaultMotions","defaultMotions","openAnimation","openTransitionName","switchingModeFromInline","motionName","concat","defaultMotion","other"],"sources":["C:/Users/OÄŸuz/Desktop/fullstack/src/frontend/node_modules/rc-menu/es/utils/legacyUtil.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport warning from \"rc-util/es/warning\";\nexport function getMotion(_ref, _ref2, menuMode) {\n  var prefixCls = _ref.prefixCls,\n      motion = _ref.motion,\n      _ref$defaultMotions = _ref.defaultMotions,\n      defaultMotions = _ref$defaultMotions === void 0 ? {} : _ref$defaultMotions,\n      openAnimation = _ref.openAnimation,\n      openTransitionName = _ref.openTransitionName;\n  var switchingModeFromInline = _ref2.switchingModeFromInline;\n\n  if (motion) {\n    return motion;\n  }\n\n  if (_typeof(openAnimation) === 'object' && openAnimation) {\n    warning(false, 'Object type of `openAnimation` is removed. Please use `motion` instead.');\n  } else if (typeof openAnimation === 'string') {\n    return {\n      motionName: \"\".concat(prefixCls, \"-open-\").concat(openAnimation)\n    };\n  }\n\n  if (openTransitionName) {\n    return {\n      motionName: openTransitionName\n    };\n  } // Default logic\n\n\n  var defaultMotion = defaultMotions[menuMode];\n\n  if (defaultMotion) {\n    return defaultMotion;\n  } // When mode switch from inline\n  // submenu should hide without animation\n\n\n  return switchingModeFromInline ? null : defaultMotions.other;\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,mCAAmC;AACvD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAO,SAASC,SAAS,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EAC/C,IAAIC,SAAS,GAAGH,IAAI,CAACG,SAAS;IAC1BC,MAAM,GAAGJ,IAAI,CAACI,MAAM;IACpBC,mBAAmB,GAAGL,IAAI,CAACM,cAAc;IACzCA,cAAc,GAAGD,mBAAmB,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,mBAAmB;IAC1EE,aAAa,GAAGP,IAAI,CAACO,aAAa;IAClCC,kBAAkB,GAAGR,IAAI,CAACQ,kBAAkB;EAChD,IAAIC,uBAAuB,GAAGR,KAAK,CAACQ,uBAAuB;EAE3D,IAAIL,MAAM,EAAE;IACV,OAAOA,MAAM;EACf;EAEA,IAAIP,OAAO,CAACU,aAAa,CAAC,KAAK,QAAQ,IAAIA,aAAa,EAAE;IACxDT,OAAO,CAAC,KAAK,EAAE,yEAAyE,CAAC;EAC3F,CAAC,MAAM,IAAI,OAAOS,aAAa,KAAK,QAAQ,EAAE;IAC5C,OAAO;MACLG,UAAU,EAAE,EAAE,CAACC,MAAM,CAACR,SAAS,EAAE,QAAQ,CAAC,CAACQ,MAAM,CAACJ,aAAa;IACjE,CAAC;EACH;EAEA,IAAIC,kBAAkB,EAAE;IACtB,OAAO;MACLE,UAAU,EAAEF;IACd,CAAC;EACH,CAAC,CAAC;;EAGF,IAAII,aAAa,GAAGN,cAAc,CAACJ,QAAQ,CAAC;EAE5C,IAAIU,aAAa,EAAE;IACjB,OAAOA,aAAa;EACtB,CAAC,CAAC;EACF;;EAGA,OAAOH,uBAAuB,GAAG,IAAI,GAAGH,cAAc,CAACO,KAAK;AAC9D"},"metadata":{},"sourceType":"module","externalDependencies":[]}